<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on CoolLiuzw</title>
    <link>https://coolliuzw.work/posts/</link>
    <description>Recent content in Posts on CoolLiuzw</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 06 Dec 2020 18:13:38 +0800</lastBuildDate><atom:link href="https://coolliuzw.work/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[golang] Gocheck单元测试框架基本使用</title>
      <link>https://coolliuzw.work/2020/gocheck/</link>
      <pubDate>Sun, 06 Dec 2020 18:13:38 +0800</pubDate>
      
      <guid>https://coolliuzw.work/2020/gocheck/</guid>
      <description>官方网站  简介  go语言单元测试框架，解决go语言自带的测试框架go test相关不足的。  特点  详细看官方描述，如果有学习过c语言的话，有点类似c语言中的CUnit的测试框架结构，CUnit官方  实战 安装 go get -u gopkg.in/check.v1
使用 API 文档 gocheck 检查包的 API文档可在线获得:
 https://gopkg.in/check.v1  官方demo package calc import ( &amp;#34;io&amp;#34; &amp;#34;testing&amp;#34; . &amp;#34;gopkg.in/check.v1&amp;#34; ) // Hook up go check into the &amp;#34;go test&amp;#34; runner. func Test(t *testing.T) { TestingT(t) } type MySuite struct{} var _ = Suite(&amp;amp;MySuite{}) func (s *MySuite) TestHelloWorld(c *C) { c.Assert(42, Equals, &amp;#34;42&amp;#34;) c.Assert(io.ErrClosedPipe, ErrorMatches, &amp;#34;io: .</description>
    </item>
    
    <item>
      <title>[tools] 如何玩转GitHub？</title>
      <link>https://coolliuzw.work/2020/github-search/</link>
      <pubDate>Sun, 06 Dec 2020 16:31:52 +0800</pubDate>
      
      <guid>https://coolliuzw.work/2020/github-search/</guid>
      <description>1. 最常用的Git命令 克隆代码
 git clone  http地址 git地址    拉取代吗
 git pull  切换分支
 git checkout &amp;lt;branch_name&amp;gt;  查看工作区状态
 git status  查看过往提交记录
 git log  提交到暂存区
 git add  提交到本地仓库
 git commit -m &amp;quot;提交注释&amp;quot;  提交到远程仓库
 git pull  2. GitHub介绍和搜索项目   按项目名称（name）查找
 in:name dev-tester    按项目描述（description）查找
  in:description 微服务
  in:about 微服务</description>
    </item>
    
    <item>
      <title>修改LeaveIt中的行内code样式</title>
      <link>https://coolliuzw.work/2020/code-csdn/</link>
      <pubDate>Sun, 06 Dec 2020 13:33:21 +0800</pubDate>
      
      <guid>https://coolliuzw.work/2020/code-csdn/</guid>
      <description>修改目的  修改之前的Leave It主题的行内代码样式.  正式动手 首先去作者对主题的介绍中看看有没有提到自定义样式，很棒的是作者提到了代码高亮的问题，很好，这就是成功第一步了。 修改 assts/css/_page/post.scss 中 code:not([class]) 的样式代码：
/* 原来的代码 */ code:not([class]) { padding: 5px 5px; background: #fff; border: 1px solid #ddd; box-shadow: 1px 1px 0 #fff, 2px 2px 0 #ddd; margin-left: 3px; margin-right: 3px; .dark-theme &amp;amp;:not([class]) { background: transparent; box-shadow: 1px 1px 0 $dark-font-secondary-color, 2px 2px 0 $dark-font-secondary-color; } } /* 修改成自己想要的样式 */ code:not([class]) { padding: 2px 4px; background: #f9f2f4; color: #ef3982; border-radius: 2px; margin-left: 3px; margin-right: 3px; .</description>
    </item>
    
    <item>
      <title>静态博客添加访问统计功能</title>
      <link>https://coolliuzw.work/2020/busuanzi/</link>
      <pubDate>Sun, 06 Dec 2020 11:28:25 +0800</pubDate>
      
      <guid>https://coolliuzw.work/2020/busuanzi/</guid>
      <description>准备工作 简介 目前越来越多的的人选择使用静态博客，例如Hexo、Hugo、等等，静态博客有更加轻量，便于管理，更加安全等诸多的优点。因为本服务在使用github pages部署的，这时候不需要自己后台的网页计数器就开始显示的有必要的。
工具准备  不蒜子 - 极简网页计数器 优缺点：  优点：使用非常的方便 缺点：无法对访问的数据做统计和分析，不过做为静态博客起初可以不关注    使用方法 Step1 引入js文件，原理的话就显而易见了，每次页面打开都会向js文件地址发送一次请求，因此，这里你要在所有你要计数的地方引入一遍；我这里推荐将其放到博客的footer里。（其实这里是借用了人家的后台，不过，既然能方便我们，嘿嘿…）
&amp;lt;script async src=&amp;#34;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; Step2 添加相应代码（两层span，要是想美化什么的啦，自行研究吧）
&amp;lt;span id=&amp;#34;busuanzi_container_site_pv&amp;#34;&amp;gt; 本站总访问量&amp;lt;span id=&amp;#34;busuanzi_value_site_pv&amp;#34;&amp;gt;&amp;lt;/span&amp;gt;次&amp;lt;/span&amp;gt;&amp;lt;span id=&amp;#34;busuanzi_container_site_uv&amp;#34;&amp;gt; 本站访客数&amp;lt;span id=&amp;#34;busuanzi_value_site_uv&amp;#34;&amp;gt;&amp;lt;/span&amp;gt;人次&amp;lt;/span&amp;gt;&amp;lt;span id=&amp;#34;busuanzi_container_page_pv&amp;#34;&amp;gt; 本文总阅读量&amp;lt;span id=&amp;#34;busuanzi_value_page_pv&amp;#34;&amp;gt;&amp;lt;/span&amp;gt;次&amp;lt;/span&amp;gt; 完成  完结 文章的最底下，本文总阅读量就是啦  </description>
    </item>
    
    <item>
      <title>Me</title>
      <link>https://coolliuzw.work/2020/me/</link>
      <pubDate>Sat, 05 Dec 2020 18:30:48 +0800</pubDate>
      
      <guid>https://coolliuzw.work/2020/me/</guid>
      <description>自我简介  视频会议服务器开发，主要涉及会议协议和会议业务部分. 打工人，之前使用的c语言做服务器开发，很显然做服务器开发，使用c语言的效率无法满足我们当前的开发进度。 后续团队开发开始考虑go语言，目前从2020年8月开始接触go语言，也是处于学习当中。一起学习。  </description>
    </item>
    
  </channel>
</rss>
